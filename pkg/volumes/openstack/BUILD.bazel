load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "openstack",
    srcs = [
        "config.go",
        "discovery.go",
        "metrics.go",
        "metrics_api.go",
        "util.go",
        "volumes.go",
    ],
    importpath = "sigs.k8s.io/etcdadm/etcd-manager/pkg/volumes/openstack",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/privateapi/discovery",
        "//pkg/volumes",
        "//vendor/github.com/gophercloud/gophercloud",
        "//vendor/github.com/gophercloud/gophercloud/openstack",
        "//vendor/github.com/gophercloud/gophercloud/openstack/blockstorage/v3/volumes",
        "//vendor/github.com/gophercloud/gophercloud/openstack/compute/v2/extensions/availabilityzones",
        "//vendor/github.com/gophercloud/gophercloud/openstack/compute/v2/extensions/volumeattach",
        "//vendor/github.com/gophercloud/gophercloud/openstack/compute/v2/servers",
        "//vendor/github.com/prometheus/client_golang/prometheus",
        "//vendor/gopkg.in/gcfg.v1:gcfg_v1",
        "//vendor/k8s.io/klog/v2:klog",
        "//vendor/k8s.io/mount-utils",
        "//vendor/k8s.io/utils/exec",
    ],
)

go_test(
    name = "openstack_test",
    srcs = ["volumes_test.go"],
    data = glob(["testdata/**"]),
    embed = [":openstack"],
    deps = [
        "//vendor/k8s.io/mount-utils",
        "//vendor/k8s.io/utils/exec",
        "//vendor/k8s.io/utils/exec/testing",
    ],
)

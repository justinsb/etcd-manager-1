load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "azblob",
    srcs = [
        "access_conditions.go",
        "chunkwriting.go",
        "highlevel.go",
        "parsing_urls.go",
        "sas_service.go",
        "service_codes_blob.go",
        "storage_account_credential.go",
        "url_append_blob.go",
        "url_blob.go",
        "url_block_blob.go",
        "url_container.go",
        "url_page_blob.go",
        "url_service.go",
        "user_delegation_credential.go",
        "version.go",
        "zc_credential_anonymous.go",
        "zc_credential_shared_key.go",
        "zc_credential_token.go",
        "zc_mmf_unix.go",
        "zc_mmf_windows.go",
        "zc_pipeline.go",
        "zc_policy_request_log.go",
        "zc_policy_retry.go",
        "zc_policy_telemetry.go",
        "zc_policy_unique_request_id.go",
        "zc_retry_reader.go",
        "zc_sas_account.go",
        "zc_sas_query_params.go",
        "zc_service_codes_common.go",
        "zc_storage_error.go",
        "zc_util_validate.go",
        "zc_uuid.go",
        "zt_doc.go",
        "zz_generated_append_blob.go",
        "zz_generated_blob.go",
        "zz_generated_block_blob.go",
        "zz_generated_client.go",
        "zz_generated_container.go",
        "zz_generated_models.go",
        "zz_generated_page_blob.go",
        "zz_generated_responder_policy.go",
        "zz_generated_response_error.go",
        "zz_generated_service.go",
        "zz_generated_validation.go",
        "zz_generated_version.go",
        "zz_response_helpers.go",
    ],
    importmap = "sigs.k8s.io/etcdadm/etcd-manager/vendor/github.com/Azure/azure-storage-blob-go/azblob",
    importpath = "github.com/Azure/azure-storage-blob-go/azblob",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/Azure/azure-pipeline-go/pipeline",
        "//vendor/github.com/google/uuid",
    ] + select({
        "@io_bazel_rules_go//go/platform:android": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:darwin": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:dragonfly": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:freebsd": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:ios": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:linux": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:netbsd": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:openbsd": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:solaris": [
            "//vendor/golang.org/x/sys/unix",
        ],
        "//conditions:default": [],
    }),
)
